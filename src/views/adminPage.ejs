<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ticket Box - Admin Page</title>
  <style>
    body, html {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      background-color: black;
    }
    .navbar {
      height: 50px;
      color: #fff;
      background-color: black;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 10;
    }
    .navbar .logo {
      font-size: 20px;
      font-weight: bold;
    }
    .navbar ul {
      list-style: none;
      display: flex;
      margin: 0;
      padding: 0;
    }
    .navbar ul li {
      margin-left: 20px;
    }
    .navbar ul li a {
      text-decoration: none;
      color: #fff;
      padding: 5px 10px;
      border-radius: 4px;
    }
    .navbar ul li a:hover {
      background-color: #575757;
    }
    .fade-in {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }
    .fade-in.visible {
      opacity: 1;
      transform: translateY(0);
    }
    .create-process {
      display: flex;
      justify-content: space-around;
      align-items: center;
      height: 70px;
      width: 100%;
      background-color: black;
      color: white;
      font-weight: bold;
      margin-top: 50px;
      position: fixed;
    }
    .create-process .step {
      padding: 10px 20px;
      cursor: pointer;
    }
    .create-process .step.active {
      border-bottom: 3px solid white;
      color: white;
    }
    .create-process .step:not(.active):hover {
      color: #ccc;
    }
    .container {
      padding: 130px 20px 20px 20px;
    }
    .upload {
      background-color: white;
      border-radius: 10px;
      height: 350px;
      padding: 10px;
      margin-bottom: 10px;
    }
    .Form2, .Form3 {
      display: none;
    }
    .Form1 input[type="file"], .Form2 input[type="file"], .Form3 input[type="file"] {
      margin-bottom: 10px;
    }
    .Form1 button:hover, .Form2 button:hover, .Form3 button:hover {
      background-color: #0056b3;
    }
    .event-name {
      margin-top: 20px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="text"],input[type="datetime-local"],textarea,select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }
    .event-image {
      display: flex;
      justify-content: space-between;
    }
    .event-logo, .event-banner {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 30%;
      height: 250px;
      border: 2px solid black;
      border-radius: 10px;
      margin-bottom: 10px;
      background-color: #f9f9f9;
    }
    .event-banner {
      width: 65%;
    }
    .event-logo img, .event-banner img {
      width: 100%;  /* Đảm bảo ảnh chiếm hết chiều rộng của div */
      height: 100%; /* Giữ tỷ lệ ảnh ban đầu */
    }
    #next-btn, #back-btn {
      padding: 10px 20px;
      background-color: #0056b3;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    
    #next-btn:hover, #back-btn:hover {
      background-color: #003f73;
    }
    #radio-group{
      display: flex;
      align-items: center;
    }
    .form-group{
      margin : 10px 0;
    }
    #event-info{
      height: 400px;
    }
    #category{
      width: 40%;
      height: 70px;
    }
    #ticket-time{
      display: flex;
      justify-content:left;
      gap:30px;
      height: 80px;
    }
  </style>
</head>
<body>
  <div class="navbar">
    <div class="logo">TicketZen</div>
    <ul>
      <li><a href="#">Event List</a></li>
      <li><a href="#">Create Event</a></li>
      <li><a href="#">Term for organizer</a></li>
      <li><a href="#">Log Out</a></li>
    </ul>
  </div>
  <div class="create-process">
    <div class="step active" id="step1">1. Event Information</div>
    <div class="step" id="step2">2. Timeline & Ticket</div>
    <div class="step" id="step3">3. Setting</div>
  </div>
  <div class="container">
    <!-- Form 1 (Visible at step 1) -->
    <div class="Form1" id="Form1">
      <div class="upload">
        <div class="event-image">
          <div class="event-logo">
            <input type="file" id="logo-image" accept="image/*">
          </div>
          <div class="event-banner">
            <input type="file" id="banner-image" accept="image/*">
          </div>
        </div>
        <div class="event-name">
          <label for="event-name">Event Name</label>
          <input type="text" id="event-name" placeholder="Enter event name">
        </div>
      </div>
      <div class="upload" id="event-info">
        <div class="form-group">
          <label for="event-address">Event Address</label>
          <input type="text" id="event-address" name="event-address" placeholder="Enter the event address" />
        </div>
        <!-- Offline/Online Radio Buttons -->
        <div class="form-group" id="radio-group">
          <input type="radio" id="offline" name="event-type" value="offline" />
          <label for="offline">Offline</label>
          <input type="radio" id="online" name="event-type" value="online" />
          <label for="online">Online</label>
        </div>
        <div class="form-group">
          <label for="venue-name">Venue Name</label>
          <input type="text" id="venue-name" name="venue-name" placeholder="Enter the venue name" />
        </div>
        <!-- City/Province TextBlock -->
        <div class="form-group">
          <label for="city-province">City/Province</label>
          <select id="city-province" name="city-province">
            <option value="">Select a city or province</option>
            <option value="Hanoi">Hanoi</option>
            <option value="Ho Chi Minh City">Ho Chi Minh City</option>
          </select>
        </div>
        <!-- District TextBlock -->
        <div class="form-group">
          <label for="district">District</label>
          <select id="district" name="district">
            <option value="">Select a district</option>
            <option value="Dong Da">Dong Da</option>
            <option value="Ha Dong">Ha Dong</option>
          </select>
        </div>
        <!-- Details TextBlock -->
        <div class="form-group">
          <label for="event-details">Event Details</label>
          <input type="text" id="event-details" name="event-details" placeholder="Enter the event address" />
        </div>
      </div>
      <div class="upload" id="category">
        <div class="form-group">
          <label for="event-category">Event Category</label>
          <select id="event-category" name="event-category">
            <option value="">Select a category</option>
            <option value="Music">Music</option>
            <option value="Sport">Sport</option>
          </select>
        </div>
      </div>
      <div class="upload" id="ticket-time">
        <div class="input-field">
          <label for="start-time">Event Start Time:</label>
          <input type="datetime-local" id="start-time" name="start-time">
        </div>
        <div class="input-field">
          <label for="end-time">Event End Time:</label>
          <input type="datetime-local" id="end-time" name="end-time">
        </div>
      </div>
      <div class="upload">
        <label>Event description</label>
        <textarea id="description" name="description" rows="20" cols="30" ></textarea>
      </div>
    </div>

    <!-- Form 2 (Visible at step 2) -->
    <div class="Form2" id="Form2">
    </div>

    <!-- Form 3 (Visible at step 3) -->
    <div class="Form3" id="Form3">
      <div class="upload">
        <p>Step 3: Configure settings</p>
        <!-- Input fields for event settings go here -->
      </div>
    </div>
    <!-- Buttons to navigate steps -->
    <div class="form-navigation">
      <button id="back-btn" onclick="back()">Back</button>
      <button id="next-btn" onclick="next()">Next</button>
    </div>
  </div>

  <script>
    let currentStep = 1;
    const totalSteps = 3;
    const nextBtn = document.getElementById("next-btn");
    const backBtn = document.getElementById("back-btn");

    // Show the current step and hide others
    function showStep(step) {
      const forms = ["Form1", "Form2", "Form3"];
      forms.forEach((form, index) => {
        document.getElementById(form).style.display = (index === step - 1) ? "block" : "none";
      });
      updateStepIndicator(step);
    }

    // Update the step indicator
    function updateStepIndicator(step) {
      const steps = document.querySelectorAll(".step");
      steps.forEach((stepElement, index) => {
        if (index + 1 === step) {
          stepElement.classList.add("active");
        } else {
          stepElement.classList.remove("active");
        }
      });
    }

    async function saveDataToServer() {
      try {
        const formData = {
          title: document.getElementById('event-name').value,
          addressDetail: document.getElementById('event-address').value,
          addressProvince: document.getElementById('city-province').value,
          district: document.getElementById('district').value,
          eventType: document.querySelector('input[name="event-type"]:checked')?.value || '',
          venueName: document.getElementById('venue-name').value,
          category: document.getElementById('event-category').value,
          startDate: document.getElementById('start-time').value,
          endDate: document.getElementById('end-time').value,
          description: document.getElementById('description').value,
          status: 'Available',
          eventImages: {
            logo: document.getElementById('logo-image').files[0] ? await convertImageToBase64(document.getElementById('logo-image').files[0]) : '',
            banner: document.getElementById('banner-image').files[0] ? await convertImageToBase64(document.getElementById('banner-image').files[0]) : ''
          }
        };

        // Send data to server
        const response = await fetch('/event', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData)
        });

        if (!response.ok) {
          throw new Error('Failed to save event data');
        }

        const result = await response.json();
        console.log('Event saved successfully:', result);
        
        // Store the event ID for later use
        localStorage.setItem('currentEventId', result.data._id);

      } catch (error) {
        console.error('Error saving event:', error);
        alert('Failed to save event data. Please try again.');
        return false;
      }
      return true;
    }

    // Helper function to convert image to base64
    function convertImageToBase64(file) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => reject(error);
      });
    }

    // Next button handler
    async function next() {
      if (currentStep < totalSteps) {
        if (currentStep === 1) {
          // Save data before moving to step 2
          const saved = await saveDataToServer();
          if (!saved) return; // Don't proceed if save failed
        }
        currentStep++;
        showStep(currentStep);
      }
    }

    // Back button handler
    function back() {
      if (currentStep > 1) {
        currentStep--;
        showStep(currentStep);
      }
    }

    // Initial setup
    showStep(currentStep);
  </script>
  <script src="formHandler.js"></script>
</body>
</html>
